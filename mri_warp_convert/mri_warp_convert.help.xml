<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE help [
<!ENTITY lt "#38;#60;">
<!ENTITY gt "&#62;">
<!ENTITY amp "&#38;#38;">
<!ELEMENT help (name , synopsis , description* , arguments+ , outputs* , example* , bugs* , references* , reporting* , see-also*)*>
<!ELEMENT name (#PCDATA)>
<!ELEMENT synopsis (#PCDATA)>
<!ELEMENT description (#PCDATA)>
<!ELEMENT arguments (positional* , required-flagged* , optional-flagged*)*>
<!ELEMENT positional (intro* , argument* , explanation*)*>
<!ELEMENT required-flagged (intro* , argument* , explanation*)*>
<!ELEMENT optional-flagged (intro* , argument* , explanation*)*>
<!ELEMENT intro (#PCDATA)>
<!ELEMENT argument (#PCDATA)>
<!ELEMENT explanation (#PCDATA)>
<!ELEMENT outputs (output* , explanation*)>
<!ELEMENT output (#PCDATA)>
<!ELEMENT example (#PCDATA)>
<!ELEMENT bugs (#PCDATA)>
<!ELEMENT references (#PCDATA)>
<!ELEMENT reporting (#PCDATA)>
<!ELEMENT see-also (#PCDATA)>
]>

<help>
  <name>mri_warp_convert</name>
  <synopsis>convert_convert [options]</synopsis>
  <description>This program converts non-linear deformation field warp
  file formats. Some formats may require you to pass an image if the
  geometry information is missing form the transform file
  format.</description>
  <arguments>
    <positional>
      <intro>None.</intro>
    </positional>
    <required-flagged>
      <intro>Exactly one input is required:</intro>
      <argument>--inm3z &lt;in.m3z&gt;</argument>
      <explanation>input M3Z warp</explanation>
      <argument>--infsl &lt;in.nii.gz&gt;</argument>
      <explanation>input FSL warp</explanation>
      <argument>--initk &lt;in.nii.gz&gt;</argument>
      <explanation>input ITK warp</explanation>
      <intro>Exactly one output is required:</intro>
      <argument>--outm3z &lt;out.m3z&gt;</argument>
      <explanation>output warp (M3Z Freesurfer format)</explanation>
      <argument>--outfsl &lt;out.nii.gz&gt;</argument>
      <explanation>output warp (FSL format)</explanation>
      <argument>--outitk &lt;out.nii.gz&gt;</argument>
      <explanation>output warp (ITK format in inverse LPS2LPS)</explanation>
    </required-flagged>
    <optional-flagged>
      <intro>While M3Z contains src geometry information, other file
      formats are missing this information and you need to explicitly
      pass it via --insrcgeom. </intro>
      <argument>--insrcgeom</argument>
      <explanation>specify src image geometry (mov volume)</explanation>
      <argument>--affineImage</argument>
      <explanation>Set the gcam "orig" fields to the affine component. Uses an affine warp image</explanation>
    </optional-flagged>
  </arguments>
  <example>Convert FSL warp to M3Z (FreeSurfer):

mri_warp_convert --infsl fsl.nii.gz --outm3z out.m3z

converts an FSL warp to a FreeSurfer M3Z.
  </example>
  <example>Convert ITK warp (ANTs Syn) to M3Z (FreeSurfer):

mri_warp_convert --initk itk.nii.gz --outm3z out.m3z --insrcgeom src.nii.gz

converts an ITK warp generated by ANTs Syn to a FreeSurfer M3Z, adding the missing src geometry info.
  </example>
  <example>Convert M3Z (FreeSurfer) to ITK warp (ANTs Syn):

warp_convert --inm3z in.m3z --outitk out.nii.gz

converts an M3Z created by FreeSurfer into an ITK warp.
  </example>
</help>
